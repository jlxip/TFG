@Book{dragonBook,
  author               = {Aho, Alfred V. and Lam, Monica S. and Sethi, Ravi and Ullman, Jeffrey D.},
  publisher            = {{Addison Wesley}},
  title                = {{Compilers: Principles, Techniques, and Tools (2nd Edition)}},
  year                 = {2006},
  isbn                 = {0321486811},
  month                = {August},
  abstract             = {{

 This book provides the foundation for understanding the theory and pracitce of compilers. Revised and updated, it reflects the current state of compilation.  Every chapter has been completely revised to reflect developments in software engineering, programming languages, and computer architecture that have occurred since 1986, when the last edition published.  The authors, recognizing that few readers will ever go on to construct a compiler, retain their focus on the broader set of problems faced in software design and software development.  Computer scientists, developers, and aspiring students that want to learn how to build, maintain, and execute a compiler for a major programming language. 
}},
  added-at             = {2009-05-19T18:00:18.000+0200},
  biburl               = {https://www.bibsonomy.org/bibtex/2c3bc558a481f3cf0445068988a80f1b2/earthfare},
  citeulike-article-id = {1033375},
  description          = {CiteULike: Everyone's library},
  howpublished         = {Hardcover},
  interhash            = {6bc8d88ce1094de53ec7ec47b7ba4973},
  intrahash            = {c3bc558a481f3cf0445068988a80f1b2},
  keywords             = {compilers},
  posted-at            = {2009-05-19 16:04:16},
  priority             = {2},
  timestamp            = {2009-05-19T18:03:27.000+0200},
  url                  = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20\&path=ASIN/0321486811},
}

@Book{aho-alg,
  author               = {Aho, Alfred V. and Hopcroft, John E. and Ullman, Jeffrey D.},
  publisher            = {Addison-Wesley},
  title                = {{Data Structures and Algorithms}},
  year                 = {1983},
  address              = {Reading, Massachusetts},
  edition              = {1st},
  isbn                 = {0201000237},
  month                = jan,
  series               = {Computer Science and Information Processing},
  abstract             = {{The authors' treatment of data structures in Data Structures and Algorithms is
unified by an informal notion of "abstract data types," allowing readers to
compare different implementations of the same concept. Algorithm design
techniques are also stressed and basic algorithm analysis is covered. Most of
the programs are written in Pascal.}},
  added-at             = {2017-06-29T07:13:07.000+0200},
  biburl               = {https://www.bibsonomy.org/bibtex/2ffa140ec1b3ce1cc3acf51adf59fb0d3/gdmcbain},
  citeulike-article-id = {4807605},
  citeulike-linkout-0  = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20\&amp;path=ASIN/0201000237},
  citeulike-linkout-1  = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21\&amp;path=ASIN/0201000237},
  citeulike-linkout-10 = {http://www.worldcat.org/oclc/8626442},
  citeulike-linkout-2  = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21\&amp;path=ASIN/0201000237},
  citeulike-linkout-3  = {http://www.amazon.jp/exec/obidos/ASIN/0201000237},
  citeulike-linkout-4  = {http://www.amazon.co.uk/exec/obidos/ASIN/0201000237/citeulike00-21},
  citeulike-linkout-5  = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0201000237},
  citeulike-linkout-6  = {http://www.worldcat.org/isbn/0201000237},
  citeulike-linkout-7  = {http://books.google.com/books?vid=ISBN0201000237},
  citeulike-linkout-8  = {http://www.amazon.com/gp/search?keywords=0201000237\&index=books\&linkCode=qs},
  citeulike-linkout-9  = {http://www.librarything.com/isbn/0201000237},
  day                  = {11},
  howpublished         = {Paperback},
  interhash            = {b57bfc0a8b14b8a934cd5e2f3ca9c727},
  intrahash            = {ffa140ec1b3ce1cc3acf51adf59fb0d3},
  keywords             = {68w01-algorithms-general},
  posted-at            = {2011-06-15 06:09:37},
  priority             = {2},
  timestamp            = {2017-06-29T07:13:07.000+0200},
  url                  = {http://www.worldcat.org/isbn/0201000237},
}

@Conference{aho-conf,
  author = {Alfred Aho},
  title  = {{Bell Labs’ Role in Programming Languages and Algorithms}},
  year   = {2015},
  note   = {\url{https://www.youtube.com/watch?v=rkuOTgfmH3w}},
}

@InBook{tanen,
  author    = {Tanenbaum, Andrew S. and Bos, Herbert},
  chapter   = {1},
  pages     = {3--6},
  publisher = {Pearson},
  title     = {{Modern Operating Systems}},
  year      = {2014},
  address   = {Boston, MA},
  edition   = {4},
  isbn      = {978-0-13-359162-0},
  abstract  = {This book is intended for introductory courses in Operating Systems in Computer Science, Computer Engineering, and Electrical Engineering programs. It also serves as a useful reference for OS professionals. The widely anticipated revision of this worldwide best-seller incorporates the latest developments in operating systems (OS) technologies. The Fourth Edition includes up-to-date materials on relevant OS. Tanenbaum also provides information on current research based on his experience as an operating systems researcher.},
  added-at  = {2017-12-16T18:33:22.000+0100},
  biburl    = {https://www.bibsonomy.org/bibtex/2d5b1b6ac66b59a478aa4a40f45a06a2c/flint63},
  file      = {eBook:2014/TanenbaumBos14.pdf:PDF;Pearson Product page:http\://www.mypearsonstore.com/bookstore/modern-operating-systems-013359162X:URL;Amazon Search inside:http\://www.amazon.de/gp/reader/013359162X/:URL},
  groups    = {public},
  interhash = {31d1388b778f4318e0a874752a85e98a},
  intrahash = {d5b1b6ac66b59a478aa4a40f45a06a2c},
  keywords  = {01821 103 book computer os embedded linux microsoft multimedia},
  timestamp = {2018-04-16T11:54:16.000+0200},
  username  = {flint63},
}

@Misc{fsf,
  author       = {{Richard Stallman}},
  howpublished = {\url{https://www.gnu.org/gnu/linux-and-gnu.en.html}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{Linux and the GNU System}},
}

@Misc{badlinux,
  author       = {Intel Corporation},
  howpublished = {\url{https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/drivers/gpu/drm/i915/display/intel_display.c?h=v5.18}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{intel\_display.c}},
  year         = {2007},
}

@Misc{ls,
  author       = {{The GNU Project}},
  howpublished = {\url{https://github.com/coreutils/coreutils/blob/master/src/ls.c}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{ls.c}},
}

@InBook{paging2,
  author  = {Intel Inc.},
  chapter = {4.3},
  pages   = {10},
  title   = {{Intel 64 and IA-32 Architectures Software Developer’s Manual}},
  volume  = {3A},
}

@InBook{paging4,
  author  = {AMD Inc.},
  chapter = {5},
  pages   = {143},
  title   = {{AMD64 Architecture Programmer’s Manual}},
  volume  = {2},
}

@Misc{netbsd,
  author       = {NetBSD},
  howpublished = {\url{https://wiki.netbsd.org/ports/}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{Platforms supported}},
}

@Misc{frontier,
  author       = {@MessiahAndrw},
  howpublished = {\url{https://wiki.osdev.org/Introduction#Welcome}},
  month        = feb,
  note         = {Última vez accedido 06-07-2022},
  title        = {{OS Dev Wiki - Introduction}},
  year         = {2007},
}

@InBook{gdt,
  author  = {Intel Inc.},
  chapter = {3.4.5},
  pages   = {10},
  title   = {{Intel 64 and IA-32 Architectures Software Developer’s Manual}},
  volume  = {3A},
}

@InBook{belllabs,
  chapter = {5},
  pages   = {20},
  title   = {{Telephony: The American Telephone Journal}},
  year    = {1925},
  number  = {87},
}

@Article{belllabs2,
  author  = {Clinton Davisson},
  journal = {Nobel Lectures},
  title   = {{The Discovery of Electron Waves}},
  year    = {1965},
}

@Misc{elvideo,
  author       = {{AT\&T}},
  howpublished = {\url{https://www.youtube.com/watch?v=tc4ROCJYbm0}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{The UNIX Operating System}},
}

@Article{rc4000,
  author  = {Hansen, Per Brinch},
  journal = {{Communications of the ACM}},
  title   = {{The Nucleus of a Multiprogramming System}},
  year    = {1970},
}

@Misc{amigaos,
  author       = {Sassenrath, Carl},
  howpublished = {\url{https://archive.org/details/1990-beats-steve-amiga-rom-kernel-ref-3rd/mode/2up}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{Amiga ROM Kernel Reference Manual}},
  year         = {1986},
}

@InProceedings{heiser,
  author    = {Elphinstone, Kevin and Heiser, Gernot},
  booktitle = {{Proceedings of the Twenty-Fourth ACM, Symposium on Operating Systems Principles}},
  title     = {{From L3 to seL4: What Have We Learnt in 20 Years of L4 Microkernels?}},
  year      = {2013},
  pages     = {134},
}

@InProceedings{l3,
  author    = {Liedtke, Jochen},
  booktitle = {Proceedings of the 3rd International Workshop on Object Orientation in Operating Systems (IWOOOS)},
  title     = {A persistent system in real use—experiences of the first 13 years},
  year      = {1993},
  pages     = {2--11},
}

@InBook{syscall,
  author  = {AMD Inc.},
  chapter = {6},
  pages   = {171--173},
  title   = {{AMD64 Architecture Programmer’s Manual}},
  volume  = {2},
}

@InBook{apic,
  author  = {Intel Inc.},
  chapter = {10},
  title   = {{Intel 64 and IA-32 Architectures Software Developer’s Manual}},
  volume  = {3A},
}

@Article{mach,
  author     = {Chen, J. Bradley and Bershad, Brian N.},
  journal    = {SIGOPS Oper. Syst. Rev.},
  title      = {The Impact of Operating System Structure on Memory System Performance},
  year       = {1993},
  issn       = {0163-5980},
  month      = {dec},
  number     = {5},
  pages      = {120–133},
  volume     = {27},
  abstract   = {In this paper we evaluate the memory system behavior of two distinctly different implementations of the UNIX operating system: DEC's Ultrix, a monolithic system, and Mach 3.0 with CMU's UNIX server, a microkernel-based system. In our evaluation we use combined system and user memory reference traces of thirteen industry-standard workloads. We show that the microkernel-based system executes substantially more non-idle system instructions for an equivalent workload than the monolithic system. Furthermore, the average instruction for programs running on Mach has a higher cost, in terms of memory cycles per instruction, than on Ultrix. In the context of our traces, we explore a number of popular assertions about the memory system behavior of modern operating systems, paying special attention to the effect that Mach's microkernel architecture has on system performance. Our results indicate that many, but not all of the assertions are true, and that a few, while true, have only negligible impact on real system performance.},
  address    = {New York, NY, USA},
  doi        = {10.1145/173668.168629},
  issue_date = {Dec. 1993},
  numpages   = {14},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/173668.168629},
}

@InProceedings{l4,
  author    = {Liedtke, Jochen},
  booktitle = {Proceedings of the Fourteenth ACM Symposium on Operating Systems Principles},
  title     = {{Improving IPC by Kernel Design}},
  year      = {1993},
  address   = {New York, NY, USA},
  pages     = {175--188},
  publisher = {Association for Computing Machinery},
  series    = {SOSP '93},
  abstract  = {Inter-process communication (ipc) has to be fast and effective, otherwise programmers will not use remote procedure calls (RPC), multithreading and multitasking adequately. Thus ipc performance is vital for modern operating systems, especially μ-kernel based ones. Surprisingly, most μ-kernels exhibit poor ipc performance, typically requiring 100 μs for a short message transfer on a modern processor, running with 50 MHz clock rate.In contrast, we achieve 5 μs; a twentyfold improvement.This paper describes the methods and principles used, starting from the architectural design and going down to the coding level. There is no single trick to obtaining this high performance; rather, a synergetic approach in design and implementation on all levels is needed. The methods and their synergy are illustrated by applying them to a concrete example, the L3 μ-kernel (an industrial-quality operating system in daily use at several hundred sites). The main ideas are to guide the complete kernel design by the ipc requirements, and to make heavy use of the concept of virtual address space inside the μ-kernel itself.As the L3 experiment shows, significant performance gains are possible: compared with Mach, they range from a factor of 22 (8-byte messages) to 3 (4-Kbyte messages). Although hardware specific details influence both the design and implementation, these techniques are applicable to the whole class of conventional general purpose von Neumann processors supporting virtual addresses. Furthermore, the effort required is reasonably small, for example the dedicated parts of the μ-kernel can be concentrated in a single medium sized module.},
  doi       = {10.1145/168619.168633},
  isbn      = {0897916328},
  location  = {Asheville, North Carolina, USA},
  numpages  = {14},
  url       = {https://doi.org/10.1145/168619.168633},
}

@InProceedings{minimality,
  author    = {Liedtke, Jochen},
  booktitle = {Proceedings of the Fifteenth ACM Symposium on Operating Systems Principles},
  title     = {{On Micro-Kernel Construction}},
  year      = {1995},
  address   = {New York, NY, USA},
  pages     = {237–250},
  publisher = {Association for Computing Machinery},
  series    = {SOSP '95},
  doi       = {10.1145/224056.224075},
  isbn      = {0897917154},
  location  = {Copper Mountain, Colorado, USA},
  numpages  = {14},
  url       = {https://doi.org/10.1145/224056.224075},
}

@InProceedings{sel4,
  author    = {Klein, Gerwin and Elphinstone, Kevin and Heiser, Gernot and Andronick, June and Cock, David and Derrin, Philip and Elkaduwe, Dhammika and Engelhardt, Kai and Kolanski, Rafal and Norrish, Michael and Sewell, Thomas and Tuch, Harvey and Winwood, Simon},
  booktitle = {Proceedings of the ACM SIGOPS 22nd Symposium on Operating Systems Principles},
  title     = {{SeL4: Formal Verification of an OS Kernel}},
  year      = {2009},
  address   = {New York, NY, USA},
  pages     = {207–220},
  publisher = {Association for Computing Machinery},
  series    = {SOSP '09},
  abstract  = {Complete formal verification is the only known way to guarantee that a system is free of programming errors.We present our experience in performing the formal, machine-checked verification of the seL4 microkernel from an abstract specification down to its C implementation. We assume correctness of compiler, assembly code, and hardware, and we used a unique design approach that fuses formal and operating systems techniques. To our knowledge, this is the first formal proof of functional correctness of a complete, general-purpose operating-system kernel. Functional correctness means here that the implementation always strictly follows our high-level abstract specification of kernel behaviour. This encompasses traditional design and implementation safety properties such as the kernel will never crash, and it will never perform an unsafe operation. It also proves much more: we can predict precisely how the kernel will behave in every possible situation.seL4, a third-generation microkernel of L4 provenance, comprises 8,700 lines of C code and 600 lines of assembler. Its performance is comparable to other high-performance L4 kernels.},
  doi       = {10.1145/1629575.1629596},
  isbn      = {9781605587523},
  keywords  = {sel4, isabelle/hol, microkernel, l4},
  location  = {Big Sky, Montana, USA},
  numpages  = {14},
  url       = {https://doi.org/10.1145/1629575.1629596},
}

@InBook{pcb,
  author    = {Tanenbaum, Andrew S. and Bos, Herbert},
  chapter   = {2},
  pages     = {94},
  publisher = {Pearson},
  title     = {{Modern Operating Systems}},
  year      = {2014},
  address   = {Boston, MA},
  edition   = {4},
  isbn      = {978-0-13-359162-0},
  abstract  = {This book is intended for introductory courses in Operating Systems in Computer Science, Computer Engineering, and Electrical Engineering programs. It also serves as a useful reference for OS professionals. The widely anticipated revision of this worldwide best-seller incorporates the latest developments in operating systems (OS) technologies. The Fourth Edition includes up-to-date materials on relevant OS. Tanenbaum also provides information on current research based on his experience as an operating systems researcher.},
  added-at  = {2017-12-16T18:33:22.000+0100},
  biburl    = {https://www.bibsonomy.org/bibtex/2d5b1b6ac66b59a478aa4a40f45a06a2c/flint63},
  file      = {eBook:2014/TanenbaumBos14.pdf:PDF;Pearson Product page:http\://www.mypearsonstore.com/bookstore/modern-operating-systems-013359162X:URL;Amazon Search inside:http\://www.amazon.de/gp/reader/013359162X/:URL},
  groups    = {public},
  interhash = {31d1388b778f4318e0a874752a85e98a},
  intrahash = {d5b1b6ac66b59a478aa4a40f45a06a2c},
  keywords  = {01821 103 book computer os embedded linux microsoft multimedia},
  timestamp = {2018-04-16T11:54:16.000+0200},
  username  = {flint63},
}

@Misc{freesoftware,
  author       = {Free Software Foundation},
  howpublished = {\url{https://www.gnu.org/philosophy/free-sw.en.html}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{The Free Software Definition}},
}

@Book{empedocles,
  author    = {Pedraza, F.R.},
  publisher = {Oxford Educaci{\'o}n},
  title     = {{Historia de la filosofía, 2 Bachillerato}},
  year      = {2009},
  isbn      = {9788467351477},
  url       = {https://books.google.es/books?id=n6SzygAACAAJ},
}

@Misc{limine,
  howpublished = {\url{https://github.com/limine-bootloader/limine}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{Limine Bootloader}},
}

@InBook{excepciones,
  author  = {Intel Inc.},
  chapter = {6.3.1},
  title   = {{Intel 64 and IA-32 Architectures Software Developer’s Manual}},
  volume  = {3A},
}

@InProceedings{meltdown,
  author    = {Moritz Lipp and Michael Schwarz and Daniel Gruss and Thomas Prescher and Werner Haas and Anders Fogh and Jann Horn and Stefan Mangard and Paul Kocher and Daniel Genkin and Yuval Yarom and Mike Hamburg},
  booktitle = {27th {USENIX} Security Symposium ({USENIX} Security 18)},
  title     = {{Meltdown: Reading Kernel Memory from User Space}},
  year      = {2018},
}

@InProceedings{spectre,
  author    = {Paul Kocher and Jann Horn and Anders Fogh and and Daniel Genkin and Daniel Gruss and Werner Haas and Mike Hamburg and Moritz Lipp and Stefan Mangard and Thomas Prescher and Michael Schwarz and Yuval Yarom},
  booktitle = {40th IEEE Symposium on Security and Privacy (S\&P'19)},
  title     = {{Spectre Attacks: Exploiting Speculative Execution}},
  year      = {2019},
}

@Manual{vbe,
  title  = {{VESA BIOS EXTENSION (VBE) Core Functions Standard}},
  author = {VESA},
}

@Misc{posix,
  author       = {{IEEE Standards Association}},
  howpublished = {\url{https://standards.ieee.org/ieee/1003.1/7700/}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{Standard for Information Technology--Portable Operating System Interface (POSIX(TM)) Base Specifications, Issue 8}},
}

@Misc{ftok,
  author       = {The Open Group},
  howpublished = {\url{https://pubs.opengroup.org/onlinepubs/007904975/functions/ftok.html}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{ftok - generate an IPC key}},
}

@Misc{createfilemapping,
  author       = {Microsoft Corporation},
  howpublished = {\url{https://docs.microsoft.com/en-us/windows/win32/memory/creating-named-shared-memory?redirectedfrom=MSDN}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{Creating Named Shared Memory}},
}

@Misc{rpcswitcher,
  howpublished = {\url{https://github.com/the-strife-project/kernel/blob/main/src/syscalls/rpcSwitcher.asm}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{The Strife Project: rpcSwitcher.asm}},
}

@Misc{kmain,
  howpublished = {\url{https://github.com/the-strife-project/kernel/blob/main/src/kernel.cpp}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{The Strife Project: kernel.cpp}},
}

@Article{scheds,
  author  = {Saeidi, Shahram and Baktash, Hakimeh},
  journal = {International Journal of Information Technology and Computer Science},
  title   = {{Determining the Optimum Time Quantum Value in Round Robin Process Scheduling Method}},
  year    = {2012},
  month   = {09},
  volume  = {4},
  doi     = {10.5815/ijitcs.2012.10.08},
}

@Manual{phdrs,
  title = {{ELF-64 Object File Format}},
  year  = {1998},
}

@InBook{ahci,
  author  = {Intel Inc.},
  chapter = {3.3.9},
  pages   = {29},
  title   = {{Serial ATA: Advanced Host Controller Interface (AHCI) 1.3.1}},
}

@InBook{ermsb,
  author  = {Intel Inc.},
  chapter = {3.7.6},
  pages   = {61--63},
  title   = {{Intel® 64 and IA-32 ArchitecturesOptimization Reference Manual}},
  volume  = {3A},
}

@InBook{monolitico,
  author    = {Tanenbaum, Andrew S. and Bos, Herbert},
  chapter   = {1.7.1},
  pages     = {63--64},
  publisher = {Pearson},
  title     = {{Modern Operating Systems}},
  year      = {2014},
  address   = {Boston, MA},
  edition   = {4},
  isbn      = {978-0-13-359162-0},
  abstract  = {This book is intended for introductory courses in Operating Systems in Computer Science, Computer Engineering, and Electrical Engineering programs. It also serves as a useful reference for OS professionals. The widely anticipated revision of this worldwide best-seller incorporates the latest developments in operating systems (OS) technologies. The Fourth Edition includes up-to-date materials on relevant OS. Tanenbaum also provides information on current research based on his experience as an operating systems researcher.},
  added-at  = {2017-12-16T18:33:22.000+0100},
  biburl    = {https://www.bibsonomy.org/bibtex/2d5b1b6ac66b59a478aa4a40f45a06a2c/flint63},
  file      = {eBook:2014/TanenbaumBos14.pdf:PDF;Pearson Product page:http\://www.mypearsonstore.com/bookstore/modern-operating-systems-013359162X:URL;Amazon Search inside:http\://www.amazon.de/gp/reader/013359162X/:URL},
  groups    = {public},
  interhash = {31d1388b778f4318e0a874752a85e98a},
  intrahash = {d5b1b6ac66b59a478aa4a40f45a06a2c},
  keywords  = {01821 103 book computer os embedded linux microsoft multimedia},
  timestamp = {2018-04-16T11:54:16.000+0200},
  username  = {flint63},
}

@InBook{ukernel,
  author    = {Tanenbaum, Andrew S. and Bos, Herbert},
  chapter   = {1.7.3},
  pages     = {65--68},
  publisher = {Pearson},
  title     = {{Modern Operating Systems}},
  year      = {2014},
  address   = {Boston, MA},
  edition   = {4},
  isbn      = {978-0-13-359162-0},
  abstract  = {This book is intended for introductory courses in Operating Systems in Computer Science, Computer Engineering, and Electrical Engineering programs. It also serves as a useful reference for OS professionals. The widely anticipated revision of this worldwide best-seller incorporates the latest developments in operating systems (OS) technologies. The Fourth Edition includes up-to-date materials on relevant OS. Tanenbaum also provides information on current research based on his experience as an operating systems researcher.},
  added-at  = {2017-12-16T18:33:22.000+0100},
  biburl    = {https://www.bibsonomy.org/bibtex/2d5b1b6ac66b59a478aa4a40f45a06a2c/flint63},
  file      = {eBook:2014/TanenbaumBos14.pdf:PDF;Pearson Product page:http\://www.mypearsonstore.com/bookstore/modern-operating-systems-013359162X:URL;Amazon Search inside:http\://www.amazon.de/gp/reader/013359162X/:URL},
  groups    = {public},
  interhash = {31d1388b778f4318e0a874752a85e98a},
  intrahash = {d5b1b6ac66b59a478aa4a40f45a06a2c},
  keywords  = {01821 103 book computer os embedded linux microsoft multimedia},
  timestamp = {2018-04-16T11:54:16.000+0200},
  username  = {flint63},
}

@InBook{driver,
  author    = {Tanenbaum, Andrew S. and Bos, Herbert},
  chapter   = {5.3.2},
  pages     = {357--361},
  publisher = {Pearson},
  title     = {{Modern Operating Systems}},
  year      = {2014},
  address   = {Boston, MA},
  edition   = {4},
  isbn      = {978-0-13-359162-0},
  abstract  = {This book is intended for introductory courses in Operating Systems in Computer Science, Computer Engineering, and Electrical Engineering programs. It also serves as a useful reference for OS professionals. The widely anticipated revision of this worldwide best-seller incorporates the latest developments in operating systems (OS) technologies. The Fourth Edition includes up-to-date materials on relevant OS. Tanenbaum also provides information on current research based on his experience as an operating systems researcher.},
  added-at  = {2017-12-16T18:33:22.000+0100},
  biburl    = {https://www.bibsonomy.org/bibtex/2d5b1b6ac66b59a478aa4a40f45a06a2c/flint63},
  file      = {eBook:2014/TanenbaumBos14.pdf:PDF;Pearson Product page:http\://www.mypearsonstore.com/bookstore/modern-operating-systems-013359162X:URL;Amazon Search inside:http\://www.amazon.de/gp/reader/013359162X/:URL},
  groups    = {public},
  interhash = {31d1388b778f4318e0a874752a85e98a},
  intrahash = {d5b1b6ac66b59a478aa4a40f45a06a2c},
  keywords  = {01821 103 book computer os embedded linux microsoft multimedia},
  timestamp = {2018-04-16T11:54:16.000+0200},
  username  = {flint63},
}

@Misc{libc,
  author       = {{The GNU Project}},
  howpublished = {\url{https://www.gnu.org/software/libc/}},
  note         = {Última vez accedido 06-07-2022},
  title        = {glibc},
}

@Article{unix,
  author     = {Ritchie, Dennis M. and Thompson, Ken},
  journal    = {Commun. ACM},
  title      = {{The UNIX Time-Sharing System}},
  year       = {1974},
  issn       = {0001-0782},
  month      = {jul},
  number     = {7},
  pages      = {365–375},
  volume     = {17},
  abstract   = {UNIX is a general-purpose, multi-user, interactive operating system for the Digital Equipment Corporation PDP-11/40 and 11/45 computers. It offers a number of features seldom found even in larger operating systems, including: (1) a hierarchical file system incorporating demountable volumes; (2) compatible file, device, and inter-process I/O; (3) the ability to initiate asynchronous processes; (4) system command language selectable on a per-user basis; and (5) over 100 subsystems including a dozen languages. This paper discusses the nature and implementation of the file system and of the user command interface.},
  address    = {New York, NY, USA},
  doi        = {10.1145/361011.361061},
  issue_date = {July 1974},
  keywords   = {PDP-11, operating system, command language, file system, time-sharing},
  numpages   = {11},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/361011.361061},
}

@Misc{systemd,
  author       = {freedesktop.org},
  howpublished = {\url{https://www.freedesktop.org/wiki/Software/systemd/}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{systemd System and Service Manager}},
}

@Misc{openrc,
  author       = {{Gentoo Linux}},
  howpublished = {\url{https://wiki.gentoo.org/wiki/Project:OpenRC}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{Project: OpenRC}},
}

@Misc{runit,
  author       = {Gerrit Pape},
  howpublished = {\url{http://smarden.org/runit/}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{runit - a UNIX init scheme with service supervision}},
}

@Misc{sysvinit,
  howpublished = {\url{https://savannah.nongnu.org/projects/sysvinit}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{mainSystem V style init programs}},
}

@Misc{createprocess,
  author       = {Microsoft Inc.},
  howpublished = {\url{https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createprocessa}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{CreateProcessA function}},
}

@InBook{schedulers,
  author    = {Stallings, William},
  chapter   = {8.2},
  pages     = {271--277},
  publisher = {Prentice Hall Professional Technical Reference},
  title     = {{Computer Organization and Architecture}},
  year      = {2002},
  edition   = {6th},
  isbn      = {0130351199},
  abstract  = {From the Publisher:This book provides a clear, comprehensive presentation of the latest developments in the organization and architecture of modern-day computers, emphasizing both fundamental principles and the critical role of performance in driving computer design. A basic reference and companion for self-study, it conveys concepts through a wealth of concrete examples highlighting modern CISC and RISC systems. A five-part organization covers: an overview, the computer system, the central processing unit, the control unit, and parallel organization. For computer engineers and architects, product marketing personnel in computer or communications companies, and for information systems and computer systems personnel.},
}

@Misc{cfs,
  author       = {Ingo Molnar},
  howpublished = {\url{https://web.archive.org/web/20170906174308/https://lwn.net/Articles/230501/}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{Modular Scheduler Core and Completely Fair Scheduler [CFS]}},
}

@InProceedings{mlfq,
  author    = {Corbató, Fernando J. and Merwin-Daggett, Marjorie and Daley, Robert C.},
  booktitle = {Proceedings of the May 1-3, 1962, Spring Joint Computer Conference},
  title     = {{An Experimental Time-Sharing System}},
  year      = {1962},
  address   = {New York, NY, USA},
  pages     = {335–344},
  publisher = {Association for Computing Machinery},
  series    = {AIEE-IRE '62 (Spring)},
  abstract  = {It is the purpose of this paper to discuss briefly the need for time-sharing, some of the implementation problems, an experimental timesharing system which has been developed for the contemporary IBM 7090, and finally a scheduling algorithm of one of us (FJC) that illustrates some of the techniques which may be employed to enhance and be analyzed for the performance limits of such a time-sharing system.},
  doi       = {10.1145/1460833.1460871},
  isbn      = {9781450378758},
  location  = {San Francisco, California},
  numpages  = {10},
  url       = {https://doi.org/10.1145/1460833.1460871},
}

@Book{mlfqnt,
  author    = {Solomon, David A. and Custer, Helen},
  publisher = {Microsoft Press},
  title     = {{Inside Windows NT}},
  year      = {1998},
  address   = {USA},
  edition   = {2nd},
  isbn      = {1572316772},
  abstract  = {From the Publisher:This classic, newly updated guide to Windows NT architecture is for developers and system administrators and is written in full partnership with the Windows NT product development team at Microsoft. It takes you deep into the core components of Windows NT and gives you abundant information, insight, and perspective that you can quickly apply for better design, debugging, performance, and troubleshooting. Experience Level: Intermediate},
}

@Book{mlfqbsd,
  author    = {Samuel J. Leffler and Marshall K. McKusick and Michael J. Karels and John S. Quarterman},
  publisher = {Addison-Wesley},
  title     = {{The design and implementation of the 4.3 BSD Unix operating system}},
  year      = {1990},
  isbn      = {978-0-201-06196-3},
  series    = {Addison-Wesley series in computer science},
  bibsource = {dblp computer science bibliography, https://dblp.org},
  biburl    = {https://dblp.org/rec/books/daglib/0073214.bib},
  timestamp = {Mon, 29 Aug 2011 17:06:58 +0200},
}

@InBook{virtualmem,
  author    = {Tanenbaum, Andrew S. and Bos, Herbert},
  chapter   = {3.3},
  pages     = {194--208},
  publisher = {Pearson},
  title     = {{Modern Operating Systems}},
  year      = {2014},
  address   = {Boston, MA},
  edition   = {4},
  isbn      = {978-0-13-359162-0},
  abstract  = {This book is intended for introductory courses in Operating Systems in Computer Science, Computer Engineering, and Electrical Engineering programs. It also serves as a useful reference for OS professionals. The widely anticipated revision of this worldwide best-seller incorporates the latest developments in operating systems (OS) technologies. The Fourth Edition includes up-to-date materials on relevant OS. Tanenbaum also provides information on current research based on his experience as an operating systems researcher.},
  added-at  = {2017-12-16T18:33:22.000+0100},
  biburl    = {https://www.bibsonomy.org/bibtex/2d5b1b6ac66b59a478aa4a40f45a06a2c/flint63},
  file      = {eBook:2014/TanenbaumBos14.pdf:PDF;Pearson Product page:http\://www.mypearsonstore.com/bookstore/modern-operating-systems-013359162X:URL;Amazon Search inside:http\://www.amazon.de/gp/reader/013359162X/:URL},
  groups    = {public},
  interhash = {31d1388b778f4318e0a874752a85e98a},
  intrahash = {d5b1b6ac66b59a478aa4a40f45a06a2c},
  keywords  = {01821 103 book computer os embedded linux microsoft multimedia},
  timestamp = {2018-04-16T11:54:16.000+0200},
  username  = {flint63},
}

@Misc{ibmpc,
  author       = {{New York Times}},
  howpublished = {\url{https://www.nytimes.com/1981/08/13/business/big-ibm-s-little-computer.html}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{BIG I.B.M.'S LITTLE COMPUTER}},
  year         = {1981},
}

@InBook{bios,
  author    = {Tanenbaum, Andrew S. and Bos, Herbert},
  chapter   = {4.3.1},
  pages     = {281--282},
  publisher = {Pearson},
  title     = {{Modern Operating Systems}},
  year      = {2014},
  address   = {Boston, MA},
  edition   = {4},
  isbn      = {978-0-13-359162-0},
  abstract  = {This book is intended for introductory courses in Operating Systems in Computer Science, Computer Engineering, and Electrical Engineering programs. It also serves as a useful reference for OS professionals. The widely anticipated revision of this worldwide best-seller incorporates the latest developments in operating systems (OS) technologies. The Fourth Edition includes up-to-date materials on relevant OS. Tanenbaum also provides information on current research based on his experience as an operating systems researcher.},
  added-at  = {2017-12-16T18:33:22.000+0100},
  biburl    = {https://www.bibsonomy.org/bibtex/2d5b1b6ac66b59a478aa4a40f45a06a2c/flint63},
  file      = {eBook:2014/TanenbaumBos14.pdf:PDF;Pearson Product page:http\://www.mypearsonstore.com/bookstore/modern-operating-systems-013359162X:URL;Amazon Search inside:http\://www.amazon.de/gp/reader/013359162X/:URL},
  groups    = {public},
  interhash = {31d1388b778f4318e0a874752a85e98a},
  intrahash = {d5b1b6ac66b59a478aa4a40f45a06a2c},
  keywords  = {01821 103 book computer os embedded linux microsoft multimedia},
  timestamp = {2018-04-16T11:54:16.000+0200},
  username  = {flint63},
}

@InBook{modos,
  author  = {Intel Inc.},
  chapter = {2.2},
  pages   = {7--8},
  title   = {{Intel® 64 and IA-32 ArchitecturesOptimization Reference Manual}},
  volume  = {3A},
}

@Misc{grub,
  author       = {{The GNU Project}},
  howpublished = {\url{https://www.gnu.org/software/grub/}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{GNU GRUB}},
}

@Misc{bootmgr,
  author       = {Microsoft Inc.},
  howpublished = {\url{https://docs.microsoft.com/en-us/windows-hardware/drivers/bringup/partition-layout}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{Windows 10 Mobile partition layout}},
}

@InBook{segmentation,
  author  = {Intel Inc.},
  chapter = {3.2},
  pages   = {2--6},
  title   = {{Intel® 64 and IA-32 ArchitecturesOptimization Reference Manual}},
  volume  = {3A},
}

@InBook{iret,
  author = {Intel Inc.},
  pages  = {528--536},
  title  = {{Intel® 64 and IA-32 ArchitecturesOptimization Reference Manual}},
  volume = {2A},
}

@InBook{intvec,
  author  = {Intel Inc.},
  chapter = {6.2},
  pages   = {6--7},
  title   = {{Intel® 64 and IA-32 ArchitecturesOptimization Reference Manual}},
  volume  = {3A},
}

@InBook{idt,
  author  = {Intel Inc.},
  chapter = {6.10},
  pages   = {9--10},
  title   = {{Intel® 64 and IA-32 ArchitecturesOptimization Reference Manual}},
  volume  = {3A},
}

@InBook{tss,
  author  = {Intel Inc.},
  chapter = {7.7},
  pages   = {19--20},
  title   = {{Intel® 64 and IA-32 ArchitecturesOptimization Reference Manual}},
  volume  = {3A},
}

@InBook{pfgp,
  author  = {Intel Inc.},
  chapter = {6.3.1},
  pages   = {2--3},
  title   = {{Intel® 64 and IA-32 ArchitecturesOptimization Reference Manual}},
  volume  = {3A},
}

@Misc{jboot,
  howpublished = {\url{https://github.com/the-strife-project/JBoot}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{JBoot}},
  year         = {2020},
}

@Misc{old,
  howpublished = {\url{https://github.com/the-strife-project/Strife/tree/old}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{Strife: rama antigua}},
  year         = {2021},
}

@Misc{stivale2,
  howpublished = {\url{https://github.com/stivale/stivale/blob/master/STIVALE2.md}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{stivale2 boot protocol specification}},
}

@Manual{gop,
  title  = {{UEFI Driver Development Guide for Graphics Controller Device Classes}},
  author = {Intel Inc.},
  year   = {2011},
}

@Manual{acpi,
  title  = {{Advanced Configuration and Power Interface (ACPI) Specification}},
  author = {UEFI Forum, Inc.},
  year   = {2019},
}

@InBook{pause,
  author = {Intel Inc.},
  pages  = {235},
  title  = {{Intel® 64 and IA-32 Architectures Optimization Reference Manual}},
  volume = {2B},
}

@Manual{pci,
  title  = {{PCI Local Bus Specification}},
  author = {{PCI Special Interest Group}},
  year   = {1998},
}

@Misc{liballoc,
  author       = {Durand},
  howpublished = {\url{https://github.com/blanham/liballoc}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{liballoc - a small memory allocator}},
}

@Manual{iso9660,
  title  = {{Information processing — Volume and file structure of CD-ROM for information interchange}},
  author = {{International Organization for Standardization}},
  year   = {1988},
}

@Misc{ntfs,
  author       = {Richard Russon and Yuval Fledel},
  howpublished = {\url{https://dubeyko.com/development/FileSystems/NTFS/ntfsdoc.pdf}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{NTFS Documentation}},
}

@Misc{ext2,
  author       = {{Dave Poirier}},
  howpublished = {\url{https://www.nongnu.org/ext2-doc/ext2.html}},
  note         = {Última vez accedido 06-07-2022},
  title        = {{The Second Extended File System}},
}

@Manual{unixprog,
  title        = {{UNIX PROGRAMMER’S MANUAL}},
  author       = {K. Thompson and D. M. Ritchie},
  edition      = {Fourth},
  organization = {Bell Telephone Laboratories, Inc.},
  year         = {1973},
}

@Article{ffs,
  author     = {McKusick, Marshall K. and Joy, William N. and Leffler, Samuel J. and Fabry, Robert S.},
  journal    = {ACM Trans. Comput. Syst.},
  title      = {{A Fast File System for UNIX}},
  year       = {1984},
  issn       = {0734-2071},
  month      = {aug},
  number     = {3},
  pages      = {181–197},
  volume     = {2},
  address    = {New York, NY, USA},
  doi        = {10.1145/989.990},
  issue_date = {Aug. 1984},
  keywords   = {file system organization, file system design, UNIX, file system performance, application program interface},
  numpages   = {17},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/989.990},
}

@InBook{edsac,
  author    = {Wilkes, M. V. and Renwick, W.},
  editor    = {Randell, Brian},
  pages     = {417--421},
  publisher = {Springer Berlin Heidelberg},
  title     = {{The EDSAC}},
  year      = {1982},
  address   = {Berlin, Heidelberg},
  isbn      = {978-3-642-61812-3},
  abstract  = {The EDSAC (electronic delay storage automatic calculator) is a serial electronic calculating machine working in the scale of two and using ultrasonic tanks for storage. The main store consists of 32 tanks, each of which is about 5 ft. long and holds 32 numbers of 17 binary digits, one being a sign digit. This gives 1024 storage locations in all. It is possible to run two adjacent storage locations together so as to accommodate a number with 35 binary digits (including a sign digit); thus at any time the store may contain a mixture of long and short numbers. Short tanks which can hold one number only are used for accumulator and multiplier registers in the arithmetical unit, and for control purposes in various parts of the machine.},
  booktitle = {The Origins of Digital Computers: Selected Papers},
  doi       = {10.1007/978-3-642-61812-3_34},
  url       = {https://doi.org/10.1007/978-3-642-61812-3_34},
}

@Article{initialorders,
  author    = {David J. Wheeler},
  journal   = {Proceedings of the Royal Society of London. Series A. Mathematical and Physical Sciences},
  title     = {Programme organization and initial orders for the {EDSAC}},
  year      = {1950},
  month     = {aug},
  number    = {1071},
  pages     = {573--589},
  volume    = {202},
  doi       = {10.1098/rspa.1950.0121},
  publisher = {The Royal Society},
}

@Misc{v1lines,
  howpublished = {\url{https://github.com/dspinellis/unix-history-repo/tree/Research-V1-Snapshot-Development}},
  note         = {Última vez accedido 23-07-2022},
  title        = {{Unix History Repository: v1}},
  year         = {1970},
}

@Misc{linux001,
  author       = {Linus Benedict Torvalds},
  howpublished = {\url{https://kernel.googlesource.com/pub/scm/linux/kernel/git/nico/archive/+/v0.01}},
  note         = {Última vez accedido 23-07-2022},
  title        = {linux release 0.01},
}

@Misc{toolchainrelease,
  howpublished = {\url{https://github.com/the-strife-project/toolchain/releases/tag/2.38-12.1.0}},
  note         = {Última vez accedido 23-07-2022},
  title        = {Distribución binaria de la toolchain freestanding},
}

@Misc{toolchaindeps,
  howpublished = {\url{https://wiki.osdev.org/GCC_Cross-Compiler}},
  note         = {Última vez accedido 23-07-2022},
  title        = {{osdev.org: GCC Cross-Compiler}},
}

@Misc{vmware,
  howpublished = {\url{https://store-us.vmware.com/vmware-workstation-16-pro-5424176500.html}},
  note         = {Última vez accedido 23-07-2022},
  title        = {{VMware Workstation 16 Pro}},
}

@InBook{sysv,
  author    = {{American Telephone and Telegraph Company}},
  chapter   = {5},
  pages     = {735},
  publisher = {Prentice-Hall},
  title     = {{Unix System V, Release 4: Programmer's Guide}},
  year      = {1990},
  isbn      = {9780139318900},
  series    = {UNIX software operation},
  lccn      = {90212276},
  url       = {https://books.google.es/books?id=eHqzAAAAIAAJ},
}

@InBook{minixnew,
  author    = {Tanenbaum, Andrew S. and Woodhull, Albert S.},
  pages     = {16--19},
  publisher = {Prentice-Hall, Inc.},
  title     = {{Operating Systems Design and Implementation}},
  year      = {2005},
  address   = {USA},
  edition   = {Third},
  isbn      = {0131429388},
}

@Misc{intelme,
  author       = {{Intel Inc.}},
  howpublished = {\url{https://www.intel.com/content/www/us/en/developer/articles/guide/getting-started-with-active-management-technology.html}},
  note         = {Última vez accedido 25-07-2022},
  title        = {{Getting Started with Intel® Active Management Technology}},
}

@Article{minixtrad,
  author     = {Giuffrida, Cristiano and Kuijsten, Anton and Tanenbaum, Andrew S.},
  journal    = {SIGPLAN Not.},
  title      = {Safe and Automatic Live Update for Operating Systems},
  year       = {2013},
  issn       = {0362-1340},
  month      = {mar},
  number     = {4},
  pages      = {279–292},
  volume     = {48},
  abstract   = {Increasingly many systems have to run all the time with no downtime allowed. Consider, for example, systems controlling electric power plants and e-banking servers. Nevertheless, security patches and a constant stream of new operating system versions need to be deployed without stopping running programs. These factors naturally lead to a pressing demand for live update---upgrading all or parts of the operating system without rebooting. Unfortunately, existing solutions require significant manual intervention and thus work reliably only for small operating system patches.In this paper, we describe an automated system for live update that can safely and automatically handle major upgrades without rebooting. We have implemented our ideas in Proteos, a new research OS designed with live update in mind. Proteos relies on system support and nonintrusive instrumentation to handle even very complex updates with minimal manual effort. The key novelty is the idea of state quiescence, which allows updates to happen only in safe and predictable system states. A second novelty is the ability to automatically perform transactional live updates at the process level, ensuring a safe and stable update process. Unlike prior solutions, Proteos supports automated state transfer, state checking, and hot rollback. We have evaluated Proteos on 50 real updates and on novel live update scenarios. The results show that our techniques can effectively support both simple and complex updates, while outperforming prior solutions in terms of flexibility, security, reliability, and stability of the update process.},
  address    = {New York, NY, USA},
  doi        = {10.1145/2499368.2451147},
  issue_date = {April 2013},
  keywords   = {live update, state checking, automatic updates, operating systems, update safety, state transfer},
  numpages   = {14},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/2499368.2451147},
}

@Misc{belllapadula,
  author = {November An Electronic and Len Lapadula and The Original and D. Elliott Bell and Leonard J. Lapadula},
  title  = {{Secure Computer Systems: Mathematical Foundations}},
}

@InProceedings{minixbell,
  author    = {Roskos, J. E.},
  booktitle = {[Proceedings 1988] Fourth Aerospace Computer Security Applications},
  title     = {Minix security policy model},
  year      = {1988},
  pages     = {393-399},
  doi       = {10.1109/ACSAC.1988.113338},
}

@Misc{orga,
  howpublished = {\url{https://github.com/the-strife-project}},
  note         = {Última vez accedido 25-07-2022},
  title        = {{GitHub - The Strife Project}},
}

@Article{buddy,
  author     = {Knowlton, Kenneth C.},
  journal    = {Commun. ACM},
  title      = {{A Fast Storage Allocator}},
  year       = {1965},
  issn       = {0001-0782},
  month      = {oct},
  number     = {10},
  pages      = {623–624},
  volume     = {8},
  address    = {New York, NY, USA},
  doi        = {10.1145/365628.365655},
  issue_date = {Oct. 1965},
  numpages   = {2},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/365628.365655},
}

@Article{xoshiro256ss,
  author     = {Blackman, David and Vigna, Sebastiano},
  journal    = {ACM Trans. Math. Softw.},
  title      = {{Scrambled Linear Pseudorandom Number Generators}},
  year       = {2021},
  issn       = {0098-3500},
  month      = {sep},
  number     = {4},
  volume     = {47},
  abstract   = {F2-linear pseudorandom number generators are very popular due to their high speed, to the ease with which generators with a sizable state space can be created, and to their provable theoretical properties. However, they suffer from linear artifacts that show as failures in linearity-related statistical tests such as the binary-rank and the linear-complexity test. In this article, we give two new contributions. First, we introduce two new F2-linear transformations that have been handcrafted to have good statistical properties and at the same time to be programmable very efficiently on superscalar processors, or even directly in hardware. Then, we describe some scramblers, that is, nonlinear functions applied to the state array that reduce or delete the linear artifacts, and propose combinations of linear transformations and scramblers that give extremely fast pseudorandom number generators of high quality. A novelty in our approach is that we use ideas from the theory of filtered linear-feedback shift registers to prove some properties of our scramblers, rather than relying purely on heuristics. In the end, we provide simple, extremely fast generators that use a few hundred bits of memory, have provable properties, and pass strong statistical tests.},
  address    = {New York, NY, USA},
  articleno  = {36},
  doi        = {10.1145/3460772},
  issue_date = {December 2021},
  keywords   = {Pseudorandom number generators},
  numpages   = {32},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/3460772},
}

@Misc{douglea,
  author       = {Doug Lea},
  howpublished = {\url{https://web.archive.org/web/20220616034330/https://gee.cs.oswego.edu/dl/html/malloc.html}},
  month        = dec,
  note         = {Última vez accedido 25-07-2022},
  title        = {{A Memory Allocator}},
  year         = {1996},
}

@Misc{jbootbug,
  howpublished = {\url{https://github.com/the-strife-project/JBoot/commit/acadd83f2a93fc277d4afa44c2ed8f61fa0ede92}},
  note         = {Última vez accedido 25-07-2022},
  title        = {{The Strife Project: JBoot: fixed bug in JOTAFS}},
}

@Misc{moreheapbug,
  howpublished = {\url{https://github.com/the-strife-project/kernel/commit/ab9f1a1ea8458707aac960667571fe6980d91e33#diff-5d6ea0cc0d2320f5561430ae35a5834251e77fbf9a873894fa1983ed51e44370}},
  note         = {Última vez accedido 25-07-2022},
  title        = {{The Strife Project: kernel: [...] fix memory corruption}},
}

@Misc{newpmm,
  howpublished = {\url{https://github.com/the-strife-project/kernel/commit/77efeed157d1d7c3a0c003a8442118682287ddf3}},
  note         = {Última vez accedido 25-07-2022},
  title        = {{The Strife Project: kernel: new PMM}},
}

@Misc{liminecontrib,
  howpublished = {\url{https://github.com/limine-bootloader/limine/commits?author=jlxip}},
  note         = {Última vez accedido 25-07-2022},
  title        = {{Limine: commits by jlxip}},
}

@Misc{nano,
  howpublished = {\url{https://www.nano-editor.org/}},
  note         = {Última vez accedido 25-07-2022},
  title        = {{GNU Nano}},
}

@Misc{pllr,
  author       = {José Luis Amador Moreno},
  howpublished = {\url{https://github.com/jlxip/pl-lr}},
  note         = {Última vez accedido 25-07-2022},
  title        = {{PL-LR}},
}

@Comment{jabref-meta: databaseType:bibtex;}
